# NGINX Helm Chart Values - Optimized for non-root operation in Flux

replicaCount: 2

image:
  repository: nginxinc/nginx-unprivileged
  tag: "1.25.4"
  pullPolicy: IfNotPresent
  uid: 101
  gid: 101

serviceAccount:
  create: true
  name: nginx
  automount: true
  annotations: {}

service:
  type: ClusterIP
  port: 8080
  targetPort: 8080
  annotations: {}
    # Example: service.beta.kubernetes.io/aws-load-balancer-type: "nlb"

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 101
  fsGroup: 101
  runAsGroup: 101
  seccompProfile:
    type: RuntimeDefault

securityContext:
  capabilities:
    add: ["NET_BIND_SERVICE"]
  readOnlyRootFilesystem: false
  allowPrivilegeEscalation: false
  privileged: false

volumes:
  - name: nginx-cache
    emptyDir: {}
  - name: nginx-tmp
    emptyDir: {}
  - name: nginx-run
    emptyDir: {}
  - name: nginx-config
    emptyDir: {}
  - name: nginx-logs
    emptyDir: {}
  - name: nginx-html
    emptyDir: {}

volumeMounts:
  - name: nginx-cache
    mountPath: /var/cache/nginx
  - name: nginx-tmp
    mountPath: /tmp
  - name: nginx-run
    mountPath: /var/run
  - name: nginx-config
    mountPath: /etc/nginx/conf.d
  - name: nginx-logs
    mountPath: /var/log/nginx
  - name: nginx-html
    mountPath: /usr/share/nginx/html

resources:
  requests:
    cpu: "100m"
    memory: "128Mi"
  limits:
    cpu: "500m"
    memory: "512Mi"

autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

ingress:
  enabled: false
  # annotations:
  #   kubernetes.io/ingress.class: nginx
  # hosts:
  #   - host: example.com
  #     paths:
  #       - path: /
  #         pathType: Prefix
  # tls: []

podDisruptionBudget:
  enabled: true
  minAvailable: 1

livenessProbe:
  httpGet:
    path: /
    port: 8080
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /
    port: 8080
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  successThreshold: 1
  failureThreshold: 3

startupProbe:
  httpGet:
    path: /
    port: 8080
  initialDelaySeconds: 5
  periodSeconds: 10
  failureThreshold: 30

config: |
  worker_processes auto;
  error_log /var/log/nginx/error.log warn;
  pid /var/run/nginx.pid;

  events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
  }

  http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    access_log /var/log/nginx/access.log;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    keepalive_timeout 65;
    types_hash_max_size 2048;

    server_tokens off;

    gzip on;
    gzip_disable "msie6";
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    server {
      listen 8080 default_server;
      server_name _;

      root /usr/share/nginx/html;
      index index.html;

      location / {
        try_files $uri $uri/ =404;
      }

      location /status {
        stub_status;
        allow 127.0.0.1;
        deny all;
      }

      location ~ /\.ht {
        deny all;
      }
    }
  }

extraEnvVars:
  - name: NGINX_ENV
    value: production
  - name: NGINX_KEEPALIVE_TIMEOUT
    value: "65"

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "8080"
  prometheus.io/path: "/status"
  k8s.v1.cni.cncf.io/networks: ""
  sidecar.istio.io/inject: "false"

nodeSelector: {}

tolerations: []

affinity: {}

